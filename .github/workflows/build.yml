name: Build & Push

on:
  # push:
  #   branches: 
  #     - main
# We also want to be able to run this manually from Github
  workflow_dispatch:
    inputs:
      rg_name: 
          required: false
          default: "ritiktest-rg"
      location:
          required: false
          default: "East US"
      postgres_db_server_name:
          required: false
          default: "postgrestestritik"
      acr_name:
          required: false
          default: "quarkustestacrritik"
      cluster_name:
          required: false
          default: quarkus
  
jobs:
  # lintReusableWF:
  #   permissions:
  #     contents: read
  #     packages: read
  #     statuses: write
  #   uses: akshaykumarthakurnew/CloudhackathonSrc/.github/workflows/linter.yml@main
  
  # {
  #   "clientSecret":  "******",
  #   "subscriptionId":  "******",
  #   "tenantId":  "******",
  #   "clientId":  "******"
  # }
  create_PushDockerImage:
    # needs: [lintReusableWF]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create image
        run:  ./mvnw clean package -DskipTests

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker Tag
        run: echo quarkus_tag=$(docker images | grep quarkus_test_aks | head -n1 | cut -d " " -f1) >> $GITHUB_ENV
      
      - name: Push the image
        run: |
          docker push ${{ env.quarkus_tag }}:latest

      # Deploy to AKS
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ inputs.rg_name }}' 
          cluster-name: '${{ inputs.cluster_name }}'

      - name: Install Helm
        uses: Azure/setup-helm@v3.5

      - name: Build helm chart
        run: |
          helm package target/helm/kubernetes/*

      # - name: Setup kubectl
      #   id: install-kubectl
      #   uses: azure/setup-kubectl@v3

      # - name: Deploy to AKS
      #   id: deploy-aks
      #   uses: Azure/k8s-deploy@v4
      #   with:
      #     namespace: 'default'
      #     manifests: |
      #       target/kubernetes/kubernetes.yml 
      #     pull-images: false 

      - name: Deploy to AKS using helm
        run: |
          helm upgrade -i helmtestritik *.tgz

      - name: What IP
        run: |
          sleep 15
          kubectl get svc | grep hibernate-orm | cut -d " " -f10