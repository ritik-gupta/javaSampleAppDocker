name: BuildOnPR

on:
  push:
    branches: 
      - main
# We also want to be able to run this manually from Github
  workflow_dispatch:

env:
  DBHOST: ${{ vars.DBHOST }}
  DBNAME: ${{ vars.DBNAME }}
  _PROD_QUARKUS_DATASOURCE_USERNAME: ${{ vars.DBUSER }}
  _PROD_QUARKUS_DATASOURCE_PASSWORD: ${{ secrets.DBPASS }}
  USER_NAME: ${{ vars.USER_NAME }}
  resource_group: "1-67711aaf-playground-sandbox"
  cluster_name: quarkus
  
jobs:
  # lintReusableWF:
  #   permissions:
  #     contents: read
  #     packages: read
  #     statuses: write
  #   uses: akshaykumarthakurnew/CloudhackathonSrc/.github/workflows/linter.yml@main
  
  createDockerImage:
    # needs: [lintReusableWF]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check env variables
        run: echo ${DBHOST} && echo ${DBNAME} && echo ${DBUSER} && echo ${DBPASS}

      - name: Create image
        run:  ./mvnw clean package -DskipTests

      - name: Login to docker hub
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker Tag
        run: echo quarkus_tag=$(docker images | grep quarkus_test_aks | head -n1 | cut -d " " -f1) >> $GITHUB_ENV
      
      - name: Push the image
        uses: actions-hub/docker@v1.0.3
        with:
          args: push ${{ env.quarkus_tag }}:latest

      # Deploy to AKS
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ env.resource_group }}' 
          cluster-name: '${{ env.cluster_name }}'

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
            target/kubernetes/kubernetes.yml 
          pull-images: false 